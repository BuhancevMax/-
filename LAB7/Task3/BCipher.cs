using Task3.interfaces;

namespace Task3;

public class BCipher : ICipher
{
    public string Encode(string text)
    {
        string result = "";
        
        for (int i = 0; i < text.Length; i++)
        {
            char A = char.IsUpper(text[i]) ? 'A' : 'a'; // проверка начальной буквы алфавита (нижний или верхний регистр)
            int position = text[i] - A;                 // запоминается позиция буквы из текста, которая отнимается от первой буквы алфавита (65) (пункт 1)
            int newPosition = 25 - position;            // создается новая позиция итоговой буквы путем разницы 25 и позиции буквы из текста
            result += (char)(A + newPosition);          // первая буква алфавита прибавляется к итоговой позиции
                                                        /*Если начальная буква текста B, то она записывается в виде числа position(66).
                                                         Далее идёт инициализация новой позиции(ASCII) для новой буквы.
                                                         Число 25 происходит от того, что последняя буква алфавита Z имеет код 90, и если отнять ее от первой буквы
                                                         то будет число 25. Число 25 отнимается от начальной позиции (25 - 1 = 24) В конце к результату прибавляется буква,
                                                         которая суммируется с первой буквой алфавита (65 + 24 = 89{Y})*/
        }
        return result;
    }

    public string Decode(string text)
    {
        return Encode(text);
    }
}